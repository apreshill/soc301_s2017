<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Problem-sets on SOC 301 - Spring 2017</title>
    <link>/problem-sets/index.xml</link>
    <description>Recent content in Problem-sets on SOC 301 - Spring 2017</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 09 Feb 2017 13:14:16 -0800</lastBuildDate>
    <atom:link href="/problem-sets/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Problem Sets Discussion</title>
      <link>/problem-sets/ps-key/</link>
      <pubDate>Thu, 09 Feb 2017 13:14:16 -0800</pubDate>
      
      <guid>/problem-sets/ps-key/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#ps2-key&#34;&gt;Problem Set 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ps3-key&#34;&gt;Problem Set 3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
/BLOGDOWN-BODY-BEFORE --&gt;

&lt;hr /&gt;
&lt;p&gt;Page last updated at Wednesday, February 22, 2017 09:17:34 PST&lt;/p&gt;
&lt;div id=&#34;ps2-key&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Problem Set 2&lt;/h1&gt;
&lt;p&gt;Learning Checks LC3.2-LC3.7, LC3.9-LC3.10 from &lt;a href=&#34;https://ismayc.github.io/moderndiver-book/3-tidy.html&#34;&gt;ModernDive&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;lc3.2&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;LC3.2&lt;/h2&gt;
&lt;p&gt;Say the following table are stock prices, how would you make this tidy?&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;time&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Boeing&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Amazon&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Google&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2009-01-01&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;$173.55&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;$174.90&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;$174.34&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2009-01-02&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;$172.61&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;$171.42&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;$170.04&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2009-01-03&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;$173.86&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;$171.58&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;$173.65&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2009-01-04&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;$170.77&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;$173.89&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;$174.87&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2009-01-05&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;$174.29&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;$170.16&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;$172.19&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Discussion&lt;/strong&gt;: &lt;code&gt;Boeing&lt;/code&gt;, &lt;code&gt;Amazon&lt;/code&gt;, and &lt;code&gt;Google&lt;/code&gt; are not variables by themselves, but rather levels of another variable &lt;code&gt;stock&lt;/code&gt;. The numbers inside the table themselves are prices. Therefore, in its current form, &lt;code&gt;Google&lt;/code&gt; corresponds both to the “name of a stock” and the “price of a stock” which violates the rules of tidy data. We can transform the data to make it &lt;strong&gt;tidy&lt;/strong&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;time&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;stock&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;price&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2009-01-01&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Boeing&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;$173.55&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2009-01-02&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Boeing&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;$172.61&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2009-01-03&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Boeing&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;$173.86&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2009-01-04&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Boeing&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;$170.77&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2009-01-05&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Boeing&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;$174.29&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2009-01-01&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Amazon&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;$174.90&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2009-01-02&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Amazon&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;$171.42&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2009-01-03&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Amazon&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;$171.58&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2009-01-04&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Amazon&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;$173.89&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2009-01-05&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Amazon&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;$170.16&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2009-01-01&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Google&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;$174.34&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2009-01-02&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Google&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;$170.04&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2009-01-03&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Google&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;$173.65&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2009-01-04&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Google&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;$174.87&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2009-01-05&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Google&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;$172.19&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;lc3.3&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;LC3.3&lt;/h2&gt;
&lt;p&gt;What does any &lt;em&gt;ONE&lt;/em&gt; row in this &lt;code&gt;flights&lt;/code&gt; dataset refer to?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A. Data on an airline&lt;/li&gt;
&lt;li&gt;B. Data on a flight&lt;/li&gt;
&lt;li&gt;C. Data on an airport&lt;/li&gt;
&lt;li&gt;D. Data on multiple flights&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Discussion&lt;/strong&gt;: The correct answer is B here. The observational unit is flight. All of the variables are measurements/characteristics of a given flight. Each row is an observation of one flight containing data about that flight.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;lc3.4&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;LC3.4&lt;/h2&gt;
&lt;p&gt;What are some examples in this dataset of &lt;strong&gt;categorical&lt;/strong&gt; variables? What makes them different than &lt;strong&gt;quantitative&lt;/strong&gt; variables?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Discussion&lt;/strong&gt;: The &lt;strong&gt;categorical&lt;/strong&gt; variables are &lt;code&gt;carrier&lt;/code&gt;, &lt;code&gt;tailnum&lt;/code&gt;, &lt;code&gt;origin&lt;/code&gt;, and &lt;code&gt;dest&lt;/code&gt;. The &lt;strong&gt;quantitative&lt;/strong&gt; variables are all of the &lt;code&gt;&amp;lt;int&lt;/code&gt;&amp;gt; and &lt;code&gt;&amp;lt;dbl&amp;gt;&lt;/code&gt; class variables: &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, &lt;code&gt;day&lt;/code&gt;, &lt;code&gt;dep_time&lt;/code&gt;, &lt;code&gt;sched_dep_time&lt;/code&gt;, &lt;code&gt;arr_time&lt;/code&gt;, &lt;code&gt;sched_arr_time&lt;/code&gt;, &lt;code&gt;arr_delay&lt;/code&gt;, &lt;code&gt;flight&lt;/code&gt;, &lt;code&gt;air_time&lt;/code&gt;, &lt;code&gt;distance&lt;/code&gt;, &lt;code&gt;hour&lt;/code&gt;, and &lt;code&gt;minute&lt;/code&gt;. Note that &lt;code&gt;time_hour&lt;/code&gt; is labeled as &lt;code&gt;&amp;lt;dttm&amp;gt;&lt;/code&gt; corresponding to date-time. This is a special format in R for handling the oddities of dates and times. Note also that &lt;code&gt;dep_time&lt;/code&gt; and other similar variables are not labeled as &lt;code&gt;&amp;lt;dttm&amp;gt;&lt;/code&gt;, but rather as a number. Think about what problems this might cause in your analyses.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;lc3.5&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;LC3.5&lt;/h2&gt;
&lt;p&gt;What does &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;dbl&lt;/code&gt;, and &lt;code&gt;chr&lt;/code&gt; mean in the output above? If you need a hint, you might want to run &lt;code&gt;str(flights)&lt;/code&gt; instead.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Discussion&lt;/strong&gt;: These correspond to the &lt;code&gt;class&lt;/code&gt; of each variable in R. &lt;code&gt;dbl&lt;/code&gt; is the same thing as &lt;code&gt;num&lt;/code&gt; and represents numbers with decimal values. &lt;code&gt;int&lt;/code&gt; corresponds to integers (whole numbers and their negative opposites (-5, 4, 79, 0, 12342, etc.)). &lt;code&gt;chr&lt;/code&gt; corresponds to character values/strings and these are almost always categorical variables. The output of the similar &lt;code&gt;str(flights)&lt;/code&gt; is below.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(nycflights13)
str(flights)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Classes &amp;#39;tbl_df&amp;#39;, &amp;#39;tbl&amp;#39; and &amp;#39;data.frame&amp;#39;:    336776 obs. of  19 variables:
##  $ year          : int  2013 2013 2013 2013 2013 2013 2013 2013 2013 2013 ...
##  $ month         : int  1 1 1 1 1 1 1 1 1 1 ...
##  $ day           : int  1 1 1 1 1 1 1 1 1 1 ...
##  $ dep_time      : int  517 533 542 544 554 554 555 557 557 558 ...
##  $ sched_dep_time: int  515 529 540 545 600 558 600 600 600 600 ...
##  $ dep_delay     : num  2 4 2 -1 -6 -4 -5 -3 -3 -2 ...
##  $ arr_time      : int  830 850 923 1004 812 740 913 709 838 753 ...
##  $ sched_arr_time: int  819 830 850 1022 837 728 854 723 846 745 ...
##  $ arr_delay     : num  11 20 33 -18 -25 12 19 -14 -8 8 ...
##  $ carrier       : chr  &amp;quot;UA&amp;quot; &amp;quot;UA&amp;quot; &amp;quot;AA&amp;quot; &amp;quot;B6&amp;quot; ...
##  $ flight        : int  1545 1714 1141 725 461 1696 507 5708 79 301 ...
##  $ tailnum       : chr  &amp;quot;N14228&amp;quot; &amp;quot;N24211&amp;quot; &amp;quot;N619AA&amp;quot; &amp;quot;N804JB&amp;quot; ...
##  $ origin        : chr  &amp;quot;EWR&amp;quot; &amp;quot;LGA&amp;quot; &amp;quot;JFK&amp;quot; &amp;quot;JFK&amp;quot; ...
##  $ dest          : chr  &amp;quot;IAH&amp;quot; &amp;quot;IAH&amp;quot; &amp;quot;MIA&amp;quot; &amp;quot;BQN&amp;quot; ...
##  $ air_time      : num  227 227 160 183 116 150 158 53 140 138 ...
##  $ distance      : num  1400 1416 1089 1576 762 ...
##  $ hour          : num  5 5 5 5 6 5 6 6 6 6 ...
##  $ minute        : num  15 29 40 45 0 58 0 0 0 0 ...
##  $ time_hour     : POSIXct, format: &amp;quot;2013-01-01 05:00:00&amp;quot; &amp;quot;2013-01-01 05:00:00&amp;quot; ...&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;lc3.6&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;LC3.6&lt;/h2&gt;
&lt;p&gt;How many different columns are in this dataset?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Discussion&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(nycflights13)
glimpse(flights)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Observations: 336,776
## Variables: 19
## $ year           &amp;lt;int&amp;gt; 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,...
## $ month          &amp;lt;int&amp;gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,...
## $ day            &amp;lt;int&amp;gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,...
## $ dep_time       &amp;lt;int&amp;gt; 517, 533, 542, 544, 554, 554, 555, 557, 557, 55...
## $ sched_dep_time &amp;lt;int&amp;gt; 515, 529, 540, 545, 600, 558, 600, 600, 600, 60...
## $ dep_delay      &amp;lt;dbl&amp;gt; 2, 4, 2, -1, -6, -4, -5, -3, -3, -2, -2, -2, -2...
## $ arr_time       &amp;lt;int&amp;gt; 830, 850, 923, 1004, 812, 740, 913, 709, 838, 7...
## $ sched_arr_time &amp;lt;int&amp;gt; 819, 830, 850, 1022, 837, 728, 854, 723, 846, 7...
## $ arr_delay      &amp;lt;dbl&amp;gt; 11, 20, 33, -18, -25, 12, 19, -14, -8, 8, -2, -...
## $ carrier        &amp;lt;chr&amp;gt; &amp;quot;UA&amp;quot;, &amp;quot;UA&amp;quot;, &amp;quot;AA&amp;quot;, &amp;quot;B6&amp;quot;, &amp;quot;DL&amp;quot;, &amp;quot;UA&amp;quot;, &amp;quot;B6&amp;quot;, &amp;quot;EV&amp;quot;,...
## $ flight         &amp;lt;int&amp;gt; 1545, 1714, 1141, 725, 461, 1696, 507, 5708, 79...
## $ tailnum        &amp;lt;chr&amp;gt; &amp;quot;N14228&amp;quot;, &amp;quot;N24211&amp;quot;, &amp;quot;N619AA&amp;quot;, &amp;quot;N804JB&amp;quot;, &amp;quot;N668DN...
## $ origin         &amp;lt;chr&amp;gt; &amp;quot;EWR&amp;quot;, &amp;quot;LGA&amp;quot;, &amp;quot;JFK&amp;quot;, &amp;quot;JFK&amp;quot;, &amp;quot;LGA&amp;quot;, &amp;quot;EWR&amp;quot;, &amp;quot;EWR&amp;quot;...
## $ dest           &amp;lt;chr&amp;gt; &amp;quot;IAH&amp;quot;, &amp;quot;IAH&amp;quot;, &amp;quot;MIA&amp;quot;, &amp;quot;BQN&amp;quot;, &amp;quot;ATL&amp;quot;, &amp;quot;ORD&amp;quot;, &amp;quot;FLL&amp;quot;...
## $ air_time       &amp;lt;dbl&amp;gt; 227, 227, 160, 183, 116, 150, 158, 53, 140, 138...
## $ distance       &amp;lt;dbl&amp;gt; 1400, 1416, 1089, 1576, 762, 719, 1065, 229, 94...
## $ hour           &amp;lt;dbl&amp;gt; 5, 5, 5, 5, 6, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5,...
## $ minute         &amp;lt;dbl&amp;gt; 15, 29, 40, 45, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, ...
## $ time_hour      &amp;lt;dttm&amp;gt; 2013-01-01 05:00:00, 2013-01-01 05:00:00, 2013...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We see above from running &lt;code&gt;glimpse(flights)&lt;/code&gt; that the number of variables is 19. In a tidy data frame such as &lt;code&gt;flights&lt;/code&gt;, the number of columns corresponds directly to the number of variables so the number of columns is 19. This can also be obtained using the &lt;code&gt;ncol&lt;/code&gt; function via &lt;code&gt;ncol(flights)&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;lc3.7&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;LC3.7&lt;/h2&gt;
&lt;p&gt;How many different rows are in this dataset?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Discussion&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;We see above from running &lt;code&gt;glimpse(flights)&lt;/code&gt; that the number of observations is 336,776. In a tidy data frame such as &lt;code&gt;flights&lt;/code&gt;, the number of rows corresponds directly to the number of observations/cases so the number of rows is also 336,776. This can also be obtained using the &lt;code&gt;nrow&lt;/code&gt; function via &lt;code&gt;nrow(flights)&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;lc3.9&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;LC3.9&lt;/h2&gt;
&lt;p&gt;What properties of the observational unit do each of &lt;code&gt;lat&lt;/code&gt;, &lt;code&gt;lon&lt;/code&gt;, &lt;code&gt;alt&lt;/code&gt;, &lt;code&gt;tz&lt;/code&gt;, &lt;code&gt;dst&lt;/code&gt;, and &lt;code&gt;tzone&lt;/code&gt; describe for the &lt;code&gt;airports&lt;/code&gt; data frame? Note that you may want to use &lt;code&gt;?airports&lt;/code&gt; to get more information or go to the reference manual for the &lt;code&gt;nycflights13&lt;/code&gt; package &lt;a href=&#34;https://cran.r-project.org/web/packages/nycflights13/nycflights13.pdf&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Discussion&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;Using &lt;code&gt;?airports&lt;/code&gt;, we see that &lt;code&gt;lat&lt;/code&gt; and &lt;code&gt;lon&lt;/code&gt; correspond to the latitude and longitude of the location of the airport. &lt;code&gt;alt&lt;/code&gt; is the altitude of the airport in feet. &lt;code&gt;tz&lt;/code&gt; is the offset of the airport’s time zone from Greenwich Mean Time. &lt;code&gt;dst&lt;/code&gt; corresponds to “Daylight savings time zone” with values of &lt;code&gt;&amp;quot;A&amp;quot;&lt;/code&gt; for US DST, &lt;code&gt;&amp;quot;U&amp;quot;&lt;/code&gt; for unknown, and &lt;code&gt;&amp;quot;N&amp;quot;&lt;/code&gt; for no DST. Lastly, &lt;code&gt;tzone&lt;/code&gt; is the name of the time zone in which the airport is located.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;lc3.10&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;LC3.10&lt;/h2&gt;
&lt;p&gt;Provide the names of variables in a data frame with at least three variables in which one of them is an identification variable and the other two are not.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Discussion&lt;/strong&gt;: Many answers are appropriate here. The identification variable should correspond to the observational unit of the data frame. Here is one example:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Student ID&lt;/th&gt;
&lt;th&gt;Major&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Percentage&lt;/th&gt;
&lt;th&gt;Grade&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;1000&lt;/td&gt;
&lt;td&gt;Sociology&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;95&lt;/td&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;1001&lt;/td&gt;
&lt;td&gt;Biology&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;50&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;1002&lt;/td&gt;
&lt;td&gt;History&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;76&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;ps3-key&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Problem Set 3&lt;/h1&gt;
&lt;p&gt;Learning Checks &lt;a href=&#34;https://ismayc.github.io/moderndiver-book/3-tidy.html&#34;&gt;LC3.11-LC3.13 and LC3.15&lt;/a&gt; AND &lt;a href=&#34;https://ismayc.github.io/moderndiver-book/4-viz.html&#34;&gt;LC4.1-LC4.2, LC4.4, LC4.6-LC4.7, and LC4.10-LC4.13&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;lc3.11&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;LC3.11&lt;/h2&gt;
&lt;p&gt;What are common characteristics of “tidy” datasets?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Discussion&lt;/strong&gt;: Tidy data sets tend to be in a narrow, long format since they list all possible values of each combination of the different variables. They have one observation per row, one variable per column, one observational unit per data frame, and the entries on the inside of the table are values, each representing the intersection of a particular observation and a particular variable.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;lc3.12&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;LC3.12&lt;/h2&gt;
&lt;p&gt;What makes “tidy” datasets useful for organizing data?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Discussion&lt;/strong&gt;: They allow you to easily summarize data across a variable or to plot data and show different relationships across other variables. They are incredibly useful in looking for multivariate relationships (more than two variables) in data. You’ll see more of this as the semester goes along.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;lc3.13&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;LC3.13&lt;/h2&gt;
&lt;p&gt;How many variables are presented in the table below? What does each row correspond to? (&lt;strong&gt;Hint:&lt;/strong&gt; You may not be able to answer both of these questions immediately but take your best guess.)&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;right&#34;&gt;students&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;faculty&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Discussion&lt;/strong&gt;: This is an incredibly difficult problem to figure out. You can guess that &lt;code&gt;students&lt;/code&gt; and &lt;code&gt;faculty&lt;/code&gt; should actually be levels of a variable called something like &lt;code&gt;type&lt;/code&gt; or &lt;code&gt;role&lt;/code&gt;. The numbers inside the table represent counts of some sort, so there may be at least two other variables floating around in there.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;lc3.15&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;LC3.15&lt;/h2&gt;
&lt;p&gt;The actual data presented in LC3.13 is given below in tidy data format:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;role&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Sociology?&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Type of School&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;student&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;TRUE&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Public&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;student&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;TRUE&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Public&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;student&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;TRUE&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Public&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;student&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;TRUE&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Public&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;student&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;FALSE&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Public&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;student&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;FALSE&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Public&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;student&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;FALSE&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Private&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;student&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;FALSE&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Private&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;student&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;FALSE&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Private&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;student&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;FALSE&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Private&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;faculty&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;TRUE&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Public&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;faculty&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;TRUE&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Public&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;faculty&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;FALSE&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Public&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;faculty&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;FALSE&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Private&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;faculty&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;FALSE&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Private&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;What does each row correspond to?&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;What are the different variables in this data frame?&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;Sociology?&lt;/code&gt; variable is known as a logical variable. What types of values does a logical variable take on?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Discussion&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Each row corresponds to a particular observation (an instance of the observational unit). In this case, each row corresponds to a particular person, either a faculty member or a student.&lt;/li&gt;
&lt;li&gt;The different variables are &lt;code&gt;role&lt;/code&gt;, &lt;code&gt;Sociology?&lt;/code&gt;, and &lt;code&gt;Type of School&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Logical variables take on the values of &lt;code&gt;TRUE&lt;/code&gt; or &lt;code&gt;FALSE&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;lc4.1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;LC4.1&lt;/h2&gt;
&lt;p&gt;Take a look at both the &lt;code&gt;flights&lt;/code&gt; and &lt;code&gt;all_alaska_flights&lt;/code&gt; data frames by running &lt;code&gt;View(flights)&lt;/code&gt; and &lt;code&gt;View(all_alaska_flights)&lt;/code&gt; in the console. In what respect do these data frames differ?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Discussion&lt;/strong&gt;: Recall that you don’t have the ability to run &lt;code&gt;View&lt;/code&gt; in DataCamp and we aren’t using RStudio just yet. You can find interactive versions of both data frames &lt;a href=&#34;https://ismayc.github.io/Effective-Data-Storytelling-using-the-tidyverse/moderndive.html&#34;&gt;here&lt;/a&gt; though.&lt;/p&gt;
&lt;p&gt;The only difference between these data frames is that &lt;code&gt;flights&lt;/code&gt; contains information about 2013 NYC flights from all carriers and &lt;code&gt;all_alaska_flights&lt;/code&gt; only contains information about flights using Alaskan Airlines.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;lc4.2&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;LC4.2&lt;/h2&gt;
&lt;p&gt;What are some practical reasons why &lt;code&gt;dep_delay&lt;/code&gt; and &lt;code&gt;arr_delay&lt;/code&gt; have a positive relationship?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Discussion&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;Flights that are late in leaving the origin airport will almost surely be late in arriving at the destination airport. Further, a flight that is delayed 15 minutes on departure will probably be delayed around 15 minutes on arrival. Pilots are able to make up some time in the air sometimes, but a positive relationship is clear here. As &lt;code&gt;dep_delay&lt;/code&gt; increases, &lt;code&gt;arr_delay&lt;/code&gt; also increases.&lt;/p&gt;
&lt;div id=&#34;section&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;lc4.6&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;LC4.6&lt;/h2&gt;
&lt;p&gt;Create a new scatter-plot using different variables in the &lt;code&gt;all_alaska_flights&lt;/code&gt; data frame by modifying the example above. (Run your code in the sandbox in DataCamp and then write your code on your paper. Discuss what findings you have when looking at the plot. Remember that scatter-plots only work when analyzing the relationship between two &lt;strong&gt;numerical&lt;/strong&gt; variables!)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Discussion&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;There are many potential plots you could create here. Here is one example:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(nycflights13)
library(ggplot2)
all_alaska_flights &amp;lt;- flights %&amp;gt;% filter(carrier == &amp;quot;AS&amp;quot;)
ggplot(data = all_alaska_flights, mapping = aes(x = air_time, y = distance)) +
  geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/problem-sets/ps-key/figures/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This might initially look like an error but Alaskan Airlines online flies to Seattle from New York City. Therefore, all of the &lt;code&gt;distance&lt;/code&gt; values are 2402. We can see that there was quite a bit of variability in terms of &lt;code&gt;air_time&lt;/code&gt; though.&lt;/p&gt;
&lt;!-- --&gt;
&lt;/div&gt;
&lt;div id=&#34;lc4.7&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;LC4.7&lt;/h2&gt;
&lt;p&gt;Why is setting the &lt;code&gt;alpha&lt;/code&gt; argument value useful with scatter-plots? What further information does it give you that a regular scatter-plot cannot?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Discussion&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;alpha&lt;/code&gt; argument allows for the setting of the transparency of the points. This allows you to see when many points are over-lapping and to identify over-plotting in your scatter-plot.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;lc4.10&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;LC4.10&lt;/h2&gt;
&lt;p&gt;The weather data is recorded hourly. Why does the &lt;code&gt;time_hour&lt;/code&gt; variable correctly identify the hour of the measurement whereas the &lt;code&gt;hour&lt;/code&gt; variable does not?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Discussion&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;time_hour&lt;/code&gt; variable gives the precise hour on a given day. The &lt;code&gt;hour&lt;/code&gt; variable is just an integer value from 0 to 23 so without other information, &lt;code&gt;hour&lt;/code&gt; only gives the hour of a particular day.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;lc4.11&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;LC4.11&lt;/h2&gt;
&lt;p&gt;Why should line-graphs be avoided when there is not a clear ordering of the horizontal axis?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Discussion&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;Line-graphs only show trends in the data and are best used with time as the explanatory variable on the horizontal axis. When there is no clear ordering of the horizontal axis, one could deceive the reader into thinking a pattern/trend exists when, in fact, one does not.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;lc4.12&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;LC4.12&lt;/h2&gt;
&lt;p&gt;Why are line-graphs frequently used when time is the explanatory variable?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Discussion&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;Time on the horizontal axis and a single value for each time point provides a simple way to identify a trend in the variable. It allows for one to easily answer questions such as “Is the response variable increasing over time?”, “Where are there peaks and valleys in the response variable?”, etc.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;lc4.13&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;LC4.13&lt;/h2&gt;
&lt;p&gt;Plot a time series of a variable other than &lt;code&gt;temp&lt;/code&gt; for Newark Airport in the first 15 days of January 2013. (Run your code in the sandbox in DataCamp and then write your code on your paper. Discuss what findings you have when looking at the plot. Remember that scatter-plots only work when analyzing the relationship between two &lt;strong&gt;numerical&lt;/strong&gt; variables!)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Discussion&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;There are many potential answers for this question. Here is one answer:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(nycflights13)
library(ggplot2)
early_january_weather &amp;lt;- weather %&amp;gt;% 
  filter(origin == &amp;quot;EWR&amp;quot; &amp;amp; month == 1 &amp;amp; day &amp;lt;= 15)
ggplot(data = early_january_weather, mapping = aes(x = time_hour, y = wind_gust)) +
  geom_line()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/problem-sets/ps-key/figures/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;What immediately stands out in this plot are the days with no wind gusts at all and values of 0. There appears to be only one wind gust over 25 mpg around January 2nd or 3rd.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;!-- BLOGDOWN-HEAD




/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
  </channel>
</rss>
